TOKEN_SINGLECOMMENT, Valid identifiers:
TOKEN_ID, _age
TOKEN_ID, height
TOKEN_ID, Name
TOKEN_ID, School
TOKEN_ID, calculate
TOKEN_SINGLECOMMENT, Invalid identifiers:
TOKEN_NUMBER, 1
TOKEN_ID, name
TOKEN_SINGLECOMMENT, score
TOKEN_NUMBER, 9
TOKEN_ID, _age
TOKEN_ID, age
TOKEN_OPERATOR, %
TOKEN_ID, my
TOKEN_ID, name
TOKEN_ID, price
TOKEN_SYMBOL, @
TOKEN_DATATYPE, char
TOKEN_ID, favorite_letter
TOKEN_ID, wfqfqw
TOKEN_ID, fqwqfw
TOKEN_OPERATOR, or
TOKEN_OPERATOR, and
TOKEN_DATATYPE, str
TOKEN_DATATYPE, string
TOKEN_ID, stri
TOKEN_RBRACKET, ]
TOKEN_DATATYPE, char
TOKEN_ID, myFavLetter
TOKEN_OPERATOR, =
TOKEN_CHAR, G
TOKEN_SEMI, ;
TOKEN_RESERVEDWORDS, lambda
TOKEN_RESERVEDWORDS, in
TOKEN_RESERVEDWORDS, is
TOKEN_RESERVEDWORDS, finally
TOKEN_RESERVEDWORDS, raise
TOKEN_RESERVEDWORDS, def
TOKEN_RESERVEDWORDS, as
TOKEN_RESERVEDWORDS, var
TOKEN_RESERVEDWORDS, let
TOKEN_DATATYPE, int
TOKEN_ID, k
TOKEN_COMMA, ,
TOKEN_ID, j
TOKEN_COMMA, ,
TOKEN_ID, r
TOKEN_SEMI, ;
TOKEN_BOOL, true
TOKEN_BOOL, false
